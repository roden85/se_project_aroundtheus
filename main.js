(()=>{"use strict";var e=document.querySelector("#modal-profile-form"),t=(document.querySelector(".profile__name"),document.querySelector(".profile__bio"),document.querySelector("#profile-name")),n=document.querySelector("#profile-bio"),r=document.querySelector("#modal-photo-form"),o=(document.querySelector(".cards__list"),document.querySelector(".profile__button-edit")),i=document.querySelector("#add-button"),l={formSelector:".modal__form",inputSelector:".modal__form-input",submitButtonSelector:".modal__form-submit",inactiveButtonClass:"modal__form-submit_disabled",inputErrorClass:"modal_form_type_error",errorClass:"modal__error_visible"};function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const s=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=n}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._form.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputEls.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}},{key:"_setEventListeners",value:function(){var e,t=this;this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls=function(e){if(Array.isArray(e))return a(e)}(e=this._form.querySelectorAll(this._inputSelector))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return a(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?a(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),this._inputEls.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButtonState()}))}))}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputEls.forEach((function(t){e._hideInputError(t)}))}},{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var p=function(){function e(t,n,r){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),f(this,"_handleLikeButton",(function(){o._likeButton.classList.toggle("cards__like-button_active")})),f(this,"_handleDeleteCard",(function(){o._element.remove()})),this._name=t.title,this._link=t.link,this._cardSelector=n,this._likeButton=null,this._handleCardClick=r}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".cards__list-item").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton=this._element.querySelector(".cards__like-button"),this._trashButton=this._element.querySelector(".cards__trash-button"),this._listImg=this._element.querySelector(".cards__list-image"),this._likeButton.addEventListener("click",(function(){e._handleLikeButton()})),this._trashButton.addEventListener("click",(function(){e._handleDeleteCard()})),this._listImg.addEventListener("click",(function(){e._handleCardClick({link:e._link,name:e._name})}))}},{key:"getView",value:function(){return this._element=this._getTemplate(),this._imgCaption=this._element.querySelector(".cards__list-content-title"),this._listImg=this._element.querySelector(".cards__list-image"),console.log(this._imgCaption),this._imgCaption.textContent=this._name,this._listImg.src=this._link,this._listImg.alt="Photo of ".concat(this._name),this._setEventListeners(),this._element}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();const d=p;function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const y=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._element=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._element.prepend(e)}}])&&h(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var b=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),_(this,"_handleOutsideClick",(function(e){e.target===e.currentTarget&&n.close()})),_(this,"_handleCloseByEsc",(function(e){"Escape"===e.key&&n.close()})),this._popupElement=document.querySelector(t),this._handleCloseByEsc=this._handleCloseByEsc.bind(this),this._handleOutsideClick=this._handleOutsideClick.bind(this)}var t,n;return t=e,(n=[{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){t.target.classList.contains("modal__close-button")&&e.close()}))}},{key:"close",value:function(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleCloseByEsc),this._popupElement.removeEventListener("mousedown",this._handleOutsideClick)}},{key:"open",value:function(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleCloseByEsc),this._popupElement.addEventListener("mousedown",this._handleOutsideClick)}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=E(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},w.apply(this,arguments)}function E(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}function S(e,t){return S=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},S(e,t)}function k(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function O(e){return O=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},O(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&S(e,t)}(l,e);var t,n,r,o,i=(r=l,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(r);if(o){var n=O(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function l(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),(t=i.call(this,e))._imageEl=t._popupElement.querySelector(".modal__preview-image"),t._imageCaption=t._popupElement.querySelector(".modal__caption"),t}return t=l,(n=[{key:"open",value:function(e){var t=e.title,n=e.link;this._imageCaption.textContent=t,this._imageEl.src=n,this._imageEl.alt="Photo of ".concat(t),w(O(l.prototype),"open",this).call(this)}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),l}(b);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function B(){return B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},B.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function q(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(l,e);var t,n,r,o,i=(r=l,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(r);if(o){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return q(this,e)});function l(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),(t=i.call(this,n))._popupForm=t._popupElement.querySelector(".modal__form"),t._handleFormSubmit=r,t._inputList=t._popupForm.querySelectorAll(".modal__form-input"),t}return t=l,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){return e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;B(x(l.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){this._popupForm.reset(),B(x(l.prototype),"close",this).call(this)}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),l}(b);function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var V=function(){function e(t){var n=t.nameSelector,r=t.bioSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(n),this._userBio=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,description:this._userBio.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.description;this._userName.textContent=t,this._userBio.textContent=n}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),A=function(e){return new d(e,"#cards-template",(function(){N(e)})).getView()},F=new y({items:[{title:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{title:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{title:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{title:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{title:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{title:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:function(e){F.addItem(A(e))}},".cards__list"),D=new C("#modal__preview"),N=function(e){D.open(e)};i.addEventListener("click",(function(){z.resetValidation(),U.open()}));var U=new R({popupSelector:"#add-popup",handleFormSubmit:function(e){F.addItem(A(e)),U.close()}}),M=new V({nameSelector:".profile__name",bioSelector:".profile__bio"}),Y=new R({popupSelector:"#edit-popup",handleFormSubmit:function(e){var t=e.name,n=e.description;M.setUserInfo({name:t,description:n}),Y.close()}});o.addEventListener("click",(function(){var e;e=M.getUserInfo(),t.value=e.name,n.value=e.description,Y.open(),$.resetValidation()}));var $=new s(l,e),z=new s(l,r);$.enableValidation(),z.enableValidation(),F.renderItems(),D.setEventListeners(),Y.setEventListeners(),U.setEventListeners()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUN4QkMsYUFBYyxpQkFDZEMsWUFBYSxrQkFHVGMsRUFBVyxJQUFJekIsRUFBYyxDQUNqQ2QsY0FBZSxjQUNmZSxpQkFBa0IsWUFBMkIsSUFBeEIvQixFQUF3QixFQUF4QkEsS0FBTTRDLEVBQWtCLEVBQWxCQSxZQUN6QlUsRUFBS0UsWUFBWSxDQUFFeEQsS0FBQUEsRUFBTTRDLFlBQUFBLElBQ3pCVyxFQUFTcEMsT0FDVixJQVNIckYsRUFBa0J3QyxpQkFBaUIsU0FBUyxXQU5wQixJQUNoQm1GLElBQWNILEVBQUtJLGNBQ3pCL0gsRUFBZ0J5RyxNQUFRcUIsRUFBWXpELEtBQ3BDcEUsRUFBdUJ3RyxNQUFRcUIsRUFBWWIsWUFLM0NXLEVBQVNMLE9BQ1RTLEVBQWtCUCxpQkFDbkIsSUFFRCxJQUFNTyxFQUFvQixJQUFJcEgsRUFDNUJQLEVBQ0FSLEdBR0kySCxFQUFtQixJQUFJNUcsRUFBY1AsRUFBb0JILEdBRS9EOEgsRUFBa0JDLG1CQUNsQlQsRUFBaUJTLG1CQUNqQmIsRUFBWWMsY0FDWlosRUFBWWEsb0JBQ1pQLEVBQVNPLG9CQUNUVCxFQUFhUyxtQiIsInNvdXJjZXMiOlsid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvcG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL3BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvcGFnZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHByb2ZpbGVFZGl0Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbW9kYWwtcHJvZmlsZS1mb3JtXCIpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZU5hbWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19uYW1lXCIpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZURlc2NyaXB0aW9uRWxlbWVudCA9XHJcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19iaW9cIik7XHJcbmV4cG9ydCBjb25zdCBmb3JtTmFtZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtbmFtZVwiKTtcclxuZXhwb3J0IGNvbnN0IGZvcm1EZXNjcmlwdGlvbkVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtYmlvXCIpO1xyXG5leHBvcnQgY29uc3QgY2FyZEFkZEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21vZGFsLXBob3RvLWZvcm1cIik7XHJcbmV4cG9ydCBjb25zdCBjYXJkc0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19saXN0XCIpO1xyXG5cclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVFZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICBcIi5wcm9maWxlX19idXR0b24tZWRpdFwiXHJcbik7XHJcblxyXG5leHBvcnQgY29uc3QgY2FyZEFkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLWJ1dHRvblwiKTtcclxuXHJcbmV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbiAge1xyXG4gICAgdGl0bGU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL3lvc2VtaXRlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgdGl0bGU6IFwiTGFrZSBMb3Vpc2VcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFrZS1sb3Vpc2UuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICB0aXRsZTogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS9iYWxkLW1vdW50YWlucy5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIHRpdGxlOiBcIkxhdGVtYXJcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGF0ZW1hci5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIHRpdGxlOiBcIlZhbm9pc2UgTmF0aW9uYWwgUGFya1wiLFxyXG4gICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS92YW5vaXNlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgdGl0bGU6IFwiTGFnbyBkaSBCcmFpZXNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFnby5qcGdcIixcclxuICB9LFxyXG5dO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlbGVjdG9ycyA9IHtcclxuICBjYXJkc0xpc3Q6IFwiLmNhcmRzX19saXN0XCIsXHJcbiAgY2FyZHNUZW1wbGF0ZTogXCIjY2FyZHMtdGVtcGxhdGVcIixcclxuICBwcmV2aWV3TW9kYWw6IFwiI21vZGFsX19wcmV2aWV3XCIsXHJcbiAgY2FyZEFkZEZvcm06IFwiI21vZGFsLXBob3RvLWZvcm1cIixcclxuICBjYXJkQWRkQnV0dG9uOiBcIiNhZGQtYnV0dG9uXCIsXHJcbiAgcHJvZmlsZU5hbWVFbGVtZW50OiBcIi5wcm9maWxlX19uYW1lXCIsXHJcbiAgcHJvZmlsZURlc2NyaXB0aW9uRWxlbWVudDogXCIucHJvZmlsZV9fYmlvXCIsXHJcbiAgcHJvZmlsZUZvcm1Db250YWluZXI6IFwiI2VkaXQtcG9wdXBcIixcclxuICBmb3JtTmFtZUVsZW1lbnQ6IFwiI3Byb2ZpbGUtbmFtZVwiLFxyXG4gIGZvcm1EZXNjcmlwdGlvbkVsZW1lbnQ6IFwiI3Byb2ZpbGUtYmlvXCIsXHJcbiAgcHJvZmlsZUVkaXRGb3JtOiBcIiNtb2RhbC1wcm9maWxlLWZvcm1cIixcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCB2YWxpZGF0aW9uU2V0dGluZ3MgPSB7XHJcbiAgZm9ybVNlbGVjdG9yOiBcIi5tb2RhbF9fZm9ybVwiLFxyXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtLWlucHV0XCIsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtLXN1Ym1pdFwiLFxyXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX2Zvcm0tc3VibWl0X2Rpc2FibGVkXCIsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX2Zvcm1fdHlwZV9lcnJvclwiLFxyXG4gIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIixcclxufTtcclxuIiwiY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbCkge1xyXG4gICAgdGhpcy5fZm9ybVNlbGVjdG9yID0gc2V0dGluZ3MuZm9ybVNlbGVjdG9yO1xyXG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHNldHRpbmdzLmlucHV0U2VsZWN0b3I7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHNldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xyXG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBzZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gc2V0dGluZ3MuZXJyb3JDbGFzcztcclxuXHJcbiAgICB0aGlzLl9mb3JtID0gZm9ybUVsO1xyXG4gIH1cclxuXHJcbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWwsIGVycm9yTWVzc2FnZSkge1xyXG4gICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWwuaWR9LWVycm9yYCk7XHJcbiAgICBpbnB1dEVsLmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xyXG4gICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsKSB7XHJcbiAgICBjb25zdCBlcnJvck1lc3NhZ2VFbCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbC5pZH0tZXJyb3JgKTtcclxuICAgIGlucHV0RWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JNZXNzYWdlRWwudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbCkge1xyXG4gICAgaWYgKCFpbnB1dEVsLnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWwsIGlucHV0RWwudmFsaWRhdGlvbk1lc3NhZ2UpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfaGFzSW52YWxpZElucHV0KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2lucHV0RWxzLnNvbWUoKGlucHV0RWwpID0+IHtcclxuICAgICAgcmV0dXJuICFpbnB1dEVsLnZhbGlkaXR5LnZhbGlkO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XHJcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5faW5wdXRFbHMgPSBbLi4udGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpXTtcclxuICAgIHRoaXMuX2lucHV0RWxzLmZvckVhY2goKGlucHV0RWwpID0+IHtcclxuICAgICAgaW5wdXRFbC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsKTtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcmVzZXRWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuXHJcbiAgICB0aGlzLl9pbnB1dEVscy5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGb3JtVmFsaWRhdG9yO1xyXG4iLCJjbGFzcyBDYXJkIHtcclxuICBjb25zdHJ1Y3RvcihkYXRhLCBjYXJkU2VsZWN0b3IsIGhhbmRsZUNhcmRDbGljaykge1xyXG4gICAgdGhpcy5fbmFtZSA9IGRhdGEudGl0bGU7XHJcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xyXG5cclxuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcclxuICAgIHRoaXMuX2xpa2VCdXR0b24gPSBudWxsO1xyXG4gICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xyXG4gIH1cclxuXHJcbiAgX2dldFRlbXBsYXRlKCkge1xyXG4gICAgY29uc3QgY2FyZFRlbXBsYXRlID0gZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxyXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19saXN0LWl0ZW1cIilcclxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcclxuXHJcbiAgICByZXR1cm4gY2FyZFRlbXBsYXRlO1xyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fbGlrZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlrZS1idXR0b25cIik7XHJcbiAgICB0aGlzLl90cmFzaEJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fdHJhc2gtYnV0dG9uXCIpO1xyXG4gICAgdGhpcy5fbGlzdEltZyA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlzdC1pbWFnZVwiKTtcclxuXHJcbiAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUxpa2VCdXR0b24oKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX3RyYXNoQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNhcmQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX2xpc3RJbWcuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKHsgbGluazogdGhpcy5fbGluaywgbmFtZTogdGhpcy5fbmFtZSB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUxpa2VCdXR0b24gPSAoKSA9PiB7XHJcbiAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoXCJjYXJkc19fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gIH07XHJcblxyXG4gIF9oYW5kbGVEZWxldGVDYXJkID0gKCkgPT4ge1xyXG4gICAgdGhpcy5fZWxlbWVudC5yZW1vdmUoKTtcclxuICB9O1xyXG5cclxuICBnZXRWaWV3KCkge1xyXG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XHJcblxyXG4gICAgdGhpcy5faW1nQ2FwdGlvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgXCIuY2FyZHNfX2xpc3QtY29udGVudC10aXRsZVwiXHJcbiAgICApO1xyXG4gICAgdGhpcy5fbGlzdEltZyA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlzdC1pbWFnZVwiKTtcclxuXHJcbiAgICBjb25zb2xlLmxvZyh0aGlzLl9pbWdDYXB0aW9uKTtcclxuICAgIHRoaXMuX2ltZ0NhcHRpb24udGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xyXG4gICAgdGhpcy5fbGlzdEltZy5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgdGhpcy5fbGlzdEltZy5hbHQgPSBgUGhvdG8gb2YgJHt0aGlzLl9uYW1lfWA7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDYXJkO1xyXG4iLCJjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjbGFzc1NlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xyXG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgIHRoaXMuX2VsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNsYXNzU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVySXRlbXMoKSB7XHJcbiAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBhZGRJdGVtKGl0ZW0pIHtcclxuICAgIHRoaXMuX2VsZW1lbnQucHJlcGVuZChpdGVtKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFNlY3Rpb247XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5faGFuZGxlQ2xvc2VCeUVzYyA9IHRoaXMuX2hhbmRsZUNsb3NlQnlFc2MuYmluZCh0aGlzKTtcclxuICAgIHRoaXMuX2hhbmRsZU91dHNpZGVDbGljayA9IHRoaXMuX2hhbmRsZU91dHNpZGVDbGljay5iaW5kKHRoaXMpO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZU91dHNpZGVDbGljayA9IChldnQpID0+IHtcclxuICAgIGlmIChldnQudGFyZ2V0ID09PSBldnQuY3VycmVudFRhcmdldCkge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgX2hhbmRsZUNsb3NlQnlFc2MgPSAoZXZ0KSA9PiB7XHJcbiAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcclxuICAgICAgaWYgKGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwibW9kYWxfX2Nsb3NlLWJ1dHRvblwiKSkge1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlQ2xvc2VCeUVzYyk7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcclxuICAgICAgXCJtb3VzZWRvd25cIixcclxuICAgICAgdGhpcy5faGFuZGxlT3V0c2lkZUNsaWNrXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgb3BlbigpIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwibW9kYWxfb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlQ2xvc2VCeUVzYyk7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCB0aGlzLl9oYW5kbGVPdXRzaWRlQ2xpY2spO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5faW1hZ2VFbCA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19wcmV2aWV3LWltYWdlXCIpO1xyXG4gICAgdGhpcy5faW1hZ2VDYXB0aW9uID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2NhcHRpb25cIik7XHJcbiAgfVxyXG5cclxuICBvcGVuKHsgdGl0bGUsIGxpbmsgfSkge1xyXG4gICAgdGhpcy5faW1hZ2VDYXB0aW9uLnRleHRDb250ZW50ID0gdGl0bGU7XHJcbiAgICB0aGlzLl9pbWFnZUVsLnNyYyA9IGxpbms7XHJcbiAgICB0aGlzLl9pbWFnZUVsLmFsdCA9IGBQaG90byBvZiAke3RpdGxlfWA7XHJcbiAgICBzdXBlci5vcGVuKCk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQgfSkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2Zvcm0taW5wdXRcIik7XHJcbiAgfVxyXG5cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICBjb25zdCBpbnB1dERhdGEgPSB7fTtcclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4gKGlucHV0RGF0YVtpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlKSk7XHJcbiAgICByZXR1cm4gaW5wdXREYXRhO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0ucmVzZXQoKTtcclxuICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih7IG5hbWVTZWxlY3RvciwgYmlvU2VsZWN0b3IgfSkge1xyXG4gICAgdGhpcy5fdXNlck5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG5hbWVTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl91c2VyQmlvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihiaW9TZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5hbWU6IHRoaXMuX3VzZXJOYW1lLnRleHRDb250ZW50LFxyXG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5fdXNlckJpby50ZXh0Q29udGVudCxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBzZXRVc2VySW5mbyh7IG5hbWUsIGRlc2NyaXB0aW9uIH0pIHtcclxuICAgIHRoaXMuX3VzZXJOYW1lLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHRoaXMuX3VzZXJCaW8udGV4dENvbnRlbnQgPSBkZXNjcmlwdGlvbjtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuXHJcbmltcG9ydCB7XHJcbiAgaW5pdGlhbENhcmRzLFxyXG4gIHNlbGVjdG9ycyxcclxuICB2YWxpZGF0aW9uU2V0dGluZ3MsXHJcbiAgY2FyZEFkZEJ1dHRvbixcclxuICBwcm9maWxlRWRpdEJ1dHRvbixcclxuICBwcm9maWxlRWRpdEZvcm0sXHJcbiAgY2FyZEFkZEZvcm0sXHJcbiAgZm9ybU5hbWVFbGVtZW50LFxyXG4gIGZvcm1EZXNjcmlwdGlvbkVsZW1lbnQsXHJcbn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XHJcbmltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvcG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvcG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuXHJcbmNvbnN0IGNyZWF0ZUNhcmQgPSAoZGF0YSkgPT4ge1xyXG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChkYXRhLCBcIiNjYXJkcy10ZW1wbGF0ZVwiLCAoKSA9PiB7XHJcbiAgICBoYW5kbGVDYXJkQ2xpY2soZGF0YSk7XHJcbiAgfSk7XHJcbiAgcmV0dXJuIGNhcmQuZ2V0VmlldygpO1xyXG59O1xyXG5cclxuY29uc3QgY2FyZFNlY3Rpb24gPSBuZXcgU2VjdGlvbihcclxuICB7XHJcbiAgICBpdGVtczogaW5pdGlhbENhcmRzLFxyXG4gICAgcmVuZGVyZXI6IChkYXRhKSA9PiB7XHJcbiAgICAgIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY3JlYXRlQ2FyZChkYXRhKSk7XHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgc2VsZWN0b3JzLmNhcmRzTGlzdFxyXG4pO1xyXG5cclxuLy8gdmlldyBpbWFnZVxyXG5jb25zdCBjYXJkUHJldmlldyA9IG5ldyBQb3B1cFdpdGhJbWFnZShzZWxlY3RvcnMucHJldmlld01vZGFsKTtcclxuXHJcbmNvbnN0IGhhbmRsZUNhcmRDbGljayA9IChkYXRhKSA9PiB7XHJcbiAgY2FyZFByZXZpZXcub3BlbihkYXRhKTtcclxufTtcclxuXHJcbi8vb3BlbiBuZXcgcG9zdCBmb3JtXHJcbmNhcmRBZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBhZGRGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xyXG4gIGFkZEltYWdlRm9ybS5vcGVuKCk7XHJcbn0pO1xyXG5cclxuLy9hZGQgYSBuZXcgcG9zdFxyXG5jb25zdCBhZGRJbWFnZUZvcm0gPSBuZXcgUG9wdXBXaXRoRm9ybSh7XHJcbiAgcG9wdXBTZWxlY3RvcjogXCIjYWRkLXBvcHVwXCIsXHJcbiAgaGFuZGxlRm9ybVN1Ym1pdDogKGRhdGEpID0+IHtcclxuICAgIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY3JlYXRlQ2FyZChkYXRhKSk7XHJcbiAgICBhZGRJbWFnZUZvcm0uY2xvc2UoKTtcclxuICB9LFxyXG59KTtcclxuXHJcbi8vZ2V0IHVzZXIgaW5mb1xyXG5cclxuY29uc3QgdXNlciA9IG5ldyBVc2VySW5mbyh7XHJcbiAgbmFtZVNlbGVjdG9yOiBcIi5wcm9maWxlX19uYW1lXCIsXHJcbiAgYmlvU2VsZWN0b3I6IFwiLnByb2ZpbGVfX2Jpb1wiLFxyXG59KTtcclxuXHJcbmNvbnN0IGVkaXRGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xyXG4gIHBvcHVwU2VsZWN0b3I6IFwiI2VkaXQtcG9wdXBcIixcclxuICBoYW5kbGVGb3JtU3VibWl0OiAoeyBuYW1lLCBkZXNjcmlwdGlvbiB9KSA9PiB7XHJcbiAgICB1c2VyLnNldFVzZXJJbmZvKHsgbmFtZSwgZGVzY3JpcHRpb24gfSk7XHJcbiAgICBlZGl0Rm9ybS5jbG9zZSgpO1xyXG4gIH0sXHJcbn0pO1xyXG5cclxuY29uc3QgZmlsbFByb2ZpbGVGb3JtID0gKCkgPT4ge1xyXG4gIGNvbnN0IGN1cnJlbnRVc2VyID0gdXNlci5nZXRVc2VySW5mbygpO1xyXG4gIGZvcm1OYW1lRWxlbWVudC52YWx1ZSA9IGN1cnJlbnRVc2VyLm5hbWU7XHJcbiAgZm9ybURlc2NyaXB0aW9uRWxlbWVudC52YWx1ZSA9IGN1cnJlbnRVc2VyLmRlc2NyaXB0aW9uO1xyXG59O1xyXG5cclxucHJvZmlsZUVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBmaWxsUHJvZmlsZUZvcm0oKTtcclxuICBlZGl0Rm9ybS5vcGVuKCk7XHJcbiAgZWRpdEZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XHJcbn0pO1xyXG5cclxuY29uc3QgZWRpdEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihcclxuICB2YWxpZGF0aW9uU2V0dGluZ3MsXHJcbiAgcHJvZmlsZUVkaXRGb3JtXHJcbik7XHJcblxyXG5jb25zdCBhZGRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvblNldHRpbmdzLCBjYXJkQWRkRm9ybSk7XHJcblxyXG5lZGl0Rm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmFkZEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5jYXJkU2VjdGlvbi5yZW5kZXJJdGVtcygpO1xyXG5jYXJkUHJldmlldy5zZXRFdmVudExpc3RlbmVycygpO1xyXG5lZGl0Rm9ybS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5hZGRJbWFnZUZvcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuIl0sIm5hbWVzIjpbInByb2ZpbGVFZGl0Rm9ybSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImZvcm1OYW1lRWxlbWVudCIsImZvcm1EZXNjcmlwdGlvbkVsZW1lbnQiLCJjYXJkQWRkRm9ybSIsInByb2ZpbGVFZGl0QnV0dG9uIiwiY2FyZEFkZEJ1dHRvbiIsInZhbGlkYXRpb25TZXR0aW5ncyIsImZvcm1TZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiRm9ybVZhbGlkYXRvciIsInNldHRpbmdzIiwiZm9ybUVsIiwidGhpcyIsIl9mb3JtU2VsZWN0b3IiLCJfaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiX2Zvcm0iLCJpbnB1dEVsIiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JNZXNzYWdlRWwiLCJpZCIsImNsYXNzTGlzdCIsImFkZCIsInRleHRDb250ZW50IiwicmVtb3ZlIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwiX2lucHV0RWxzIiwic29tZSIsIl9oYXNJbnZhbGlkSW5wdXQiLCJfc3VibWl0QnV0dG9uIiwiZGlzYWJsZWQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsImFkZEV2ZW50TGlzdGVuZXIiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiaW5wdXQiLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsIl9zZXRFdmVudExpc3RlbmVycyIsIkNhcmQiLCJkYXRhIiwiY2FyZFNlbGVjdG9yIiwiaGFuZGxlQ2FyZENsaWNrIiwiX2xpa2VCdXR0b24iLCJ0b2dnbGUiLCJfZWxlbWVudCIsIl9uYW1lIiwidGl0bGUiLCJfbGluayIsImxpbmsiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUNhcmRDbGljayIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJfdHJhc2hCdXR0b24iLCJfbGlzdEltZyIsIl9oYW5kbGVMaWtlQnV0dG9uIiwiX2hhbmRsZURlbGV0ZUNhcmQiLCJuYW1lIiwiX2dldFRlbXBsYXRlIiwiX2ltZ0NhcHRpb24iLCJjb25zb2xlIiwibG9nIiwic3JjIiwiYWx0IiwiU2VjdGlvbiIsImNsYXNzU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiaXRlbSIsInByZXBlbmQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwiY2xvc2UiLCJrZXkiLCJfcG9wdXBFbGVtZW50IiwiX2hhbmRsZUNsb3NlQnlFc2MiLCJiaW5kIiwiX2hhbmRsZU91dHNpZGVDbGljayIsImNvbnRhaW5zIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIlBvcHVwV2l0aEltYWdlIiwiX2ltYWdlRWwiLCJfaW1hZ2VDYXB0aW9uIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJfcG9wdXBGb3JtIiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfaW5wdXRMaXN0IiwiaW5wdXREYXRhIiwidmFsdWUiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJyZXNldCIsIlVzZXJJbmZvIiwibmFtZVNlbGVjdG9yIiwiYmlvU2VsZWN0b3IiLCJfdXNlck5hbWUiLCJfdXNlckJpbyIsImRlc2NyaXB0aW9uIiwiY3JlYXRlQ2FyZCIsImdldFZpZXciLCJjYXJkU2VjdGlvbiIsImFkZEl0ZW0iLCJjYXJkUHJldmlldyIsIm9wZW4iLCJhZGRGb3JtVmFsaWRhdG9yIiwicmVzZXRWYWxpZGF0aW9uIiwiYWRkSW1hZ2VGb3JtIiwidXNlciIsImVkaXRGb3JtIiwic2V0VXNlckluZm8iLCJjdXJyZW50VXNlciIsImdldFVzZXJJbmZvIiwiZWRpdEZvcm1WYWxpZGF0b3IiLCJlbmFibGVWYWxpZGF0aW9uIiwicmVuZGVySXRlbXMiLCJzZXRFdmVudExpc3RlbmVycyJdLCJzb3VyY2VSb290IjoiIn0=